{"version":3,"sources":["components/Pagination/Pagination.tsx","utils.ts","App.tsx","index.tsx"],"names":["Pagination","currentPage","pages","onPageChange","className","cn","disabled","href","onClick","map","page","active","length","getNumbers","from","to","numbers","n","push","items","App","useState","perPage","setPerPage","setCurrentPage","Math","ceil","firstItem","lastItem","visibleItemsPerPage","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAA8B,SAAC,GAMtC,IAJFC,EAIC,EAJDA,YACAC,EAGC,EAHDA,MACAC,EAEC,EAFDA,aAmBF,OACE,mCACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CACEC,SAA0B,IAAhBL,IAJhB,SAQE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAc,OACdC,QAxBc,WACF,IAAhBP,GAGFE,EAFiBF,EAAc,IAiB3B,oBAWDC,EAAMO,KAAI,SAAAC,GAAI,OACb,oBAEEN,UAAWC,IACT,YACA,CACEM,OAAQV,IAAgBS,IAL9B,SASE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAK,KACLC,QAAS,kBAAML,EAAaO,IAJ9B,SAMGA,KAdEA,MAmBT,oBACEN,UAAWC,IACT,YACA,CACEC,SAAUL,IAAgBC,EAAMU,SAJtC,SAQE,mBACE,UAAQ,WACRR,UAAU,YACVG,KAAK,QACL,gBAAc,QACdC,QAxEc,WAClBP,IAAgBC,EAAMU,QAGxBT,EAFiBF,EAAc,IAiE3B,0BCnFH,SAASY,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,ECDT,IAAMG,EAAkBN,EAAW,EAAG,IACnCJ,KAAI,SAAAQ,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOpB,EAAP,KAAoBuB,EAApB,KAEMtB,EAAQW,EAAW,EAAGY,KAAKC,KAAKP,EAAMP,OAASU,IAE/CK,GAAa1B,EAAc,GAAKqB,EAChCM,EAAWD,EAAYL,EAAUH,EAAMP,OACzCO,EAAMP,OACNe,EAAYL,EAEVO,EAAsBV,EAAMW,MAChCH,EAAWC,GAQb,OACE,sBAAKxB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWH,EADX,mBACiC0B,EAAY,EAD7C,cACoDC,EADpD,eACmET,EAAMP,OADzE,OAIA,sBAAKR,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR2B,GAAG,kBACH3B,UAAU,eACV4B,MAAOV,EACPW,SAAU,SAACC,GAAD,OApBFF,GAoBuBE,EAAMC,OAAOH,MAnBpDT,EAAWS,QACXR,EAAe,GAFA,IAACQ,GAeV,UAOE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBhC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEH,YAAaA,EACbC,MAAOA,EACPC,aAAcqB,IAEhB,6BACGK,EAAoBpB,KAAI,SAAA4B,GAAI,OAC3B,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC9DnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.26d9e6ff.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  currentPage: number,\n  pages: number[],\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = (\n  {\n    currentPage,\n    pages,\n    onPageChange,\n  },\n) => {\n  const handleNextClick = () => {\n    if (currentPage !== pages.length) {\n      const nextPage = currentPage + 1;\n\n      onPageChange(nextPage);\n    }\n  };\n\n  const handlePrevClick = () => {\n    if (currentPage !== 1) {\n      const prevPage = currentPage - 1;\n\n      onPageChange(prevPage);\n    }\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={cn(\n            'page-item',\n            {\n              disabled: currentPage === 1,\n            },\n          )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled=\"true\"\n            onClick={handlePrevClick}\n          >\n            «\n          </a>\n        </li>\n\n        {pages.map(page => (\n          <li\n            key={page}\n            className={cn(\n              'page-item',\n              {\n                active: currentPage === page,\n              },\n            )}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href=\"#1\"\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n\n        <li\n          className={cn(\n            'page-item',\n            {\n              disabled: currentPage === pages.length,\n            },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled=\"false\"\n            onClick={handleNextClick}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items: string[] = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const pages = getNumbers(1, Math.ceil(items.length / perPage));\n\n  const firstItem = (currentPage - 1) * perPage;\n  const lastItem = firstItem + perPage > items.length\n    ? items.length\n    : firstItem + perPage;\n\n  const visibleItemsPerPage = items.slice(\n    firstItem, lastItem,\n  );\n\n  const onSelect = (value: number) => {\n    setPerPage(value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem + 1} - ${lastItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event) => onSelect(+event.target.value)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        currentPage={currentPage}\n        pages={pages}\n        onPageChange={setCurrentPage}\n      />\n      <ul>\n        {visibleItemsPerPage.map(item => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}